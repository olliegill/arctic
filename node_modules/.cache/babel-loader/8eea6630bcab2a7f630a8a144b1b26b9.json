{"ast":null,"code":"var _jsxFileName = \"/Users/olivergill/arctic/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport SearchPage from './pages/SearchPage'; // import './app.scss';\n// import { inject, observer } from \"mobx-react\";\n//\n// import SearchList from './components/SearchList';\n// import SearchListItem from './components/SearchListItem';\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"\",\n      component: SearchPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; // class App extends React.Component {\n//\n//     componentDidMount() {\n//         // this.props.appStore.handleSearch('surf paddle');\n//     }\n//\n//     handleSearch = (event) => {\n//         // this.props.appStore.handleSearch('surf paddle');\n//         this.props.appStore.handleSearch(event.currentTarget.value);\n//     }\n//\n//     render() {\n//         // console.log(toJS(this.props.appStore.searchResults));\n//         return (\n//             <div className=\"app\">\n//                 <input onChange={this.handleSearch} />\n//\n//                 {this.props.appStore.searchResults.map((result, i) =>(\n//                     <SearchList key={i}>\n//                         <SearchListItem data={result} />\n//                     </SearchList>\n//                 ))}\n//             </div>\n//         );\n//\n//     }\n// }\n//\n// App.propTypes = {\n//     appStore: PropTypes.object\n// }\n//\n// export default inject(['appStore'])(observer(App));","map":{"version":3,"sources":["/Users/olivergill/arctic/src/App.js"],"names":["React","PropTypes","BrowserRouter","Router","Route","SearchPage","App","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,UAAP,MAAuB,oBAAvB,C,CACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAC9BC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,EAAZ;AAAe,MAAA,SAAS,EAAEH,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAQH;;AAV6B;;AAalC,eAAeC,GAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport SearchPage from './pages/SearchPage';\n// import './app.scss';\n// import { inject, observer } from \"mobx-react\";\n//\n// import SearchList from './components/SearchList';\n// import SearchListItem from './components/SearchListItem';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router>\n                {/*<Route exact path=\"/uk/reporting\" component={ReportsContainer} />*/}\n                <Route path=\"\" component={SearchPage} />\n                {/*<Route path=\"/uk/reporting/groupreport\" component={GroupReport} />*/}\n                {/*<Route path=\"/uk/reporting/applicationreport\" component={ApplicationReport} />*/}\n            </Router>\n        );\n    }\n}\n\nexport default App;\n\n\n// class App extends React.Component {\n//\n//     componentDidMount() {\n//         // this.props.appStore.handleSearch('surf paddle');\n//     }\n//\n//     handleSearch = (event) => {\n//         // this.props.appStore.handleSearch('surf paddle');\n//         this.props.appStore.handleSearch(event.currentTarget.value);\n//     }\n//\n//     render() {\n//         // console.log(toJS(this.props.appStore.searchResults));\n//         return (\n//             <div className=\"app\">\n//                 <input onChange={this.handleSearch} />\n//\n//                 {this.props.appStore.searchResults.map((result, i) =>(\n//                     <SearchList key={i}>\n//                         <SearchListItem data={result} />\n//                     </SearchList>\n//                 ))}\n//             </div>\n//         );\n//\n//     }\n// }\n//\n// App.propTypes = {\n//     appStore: PropTypes.object\n// }\n//\n// export default inject(['appStore'])(observer(App));\n"]},"metadata":{},"sourceType":"module"}