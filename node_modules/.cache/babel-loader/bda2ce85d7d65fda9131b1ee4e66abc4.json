{"ast":null,"code":"var _jsxFileName = \"/Users/olivergill/arctic/src/components/SearchListItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './searchListItem.scss';\nimport { Link } from \"react-router-dom\";\n\nclass SearchListItem extends React.Component {\n  render() {\n    const data = this.props.data;\n    return React.createElement(\"li\", {\n      className: \"searchListItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"searchListItem__inner\",\n      to: `/repository/${data.full_name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchListItem__left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchListItem__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Repository Name: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, data.name)), React.createElement(\"div\", {\n      className: \"searchListItem__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"User Name: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, data.owner.login))), React.createElement(\"div\", {\n      className: \"searchListItem__right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchListItem__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Stars: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, data.stargazers_count)), React.createElement(\"div\", {\n      className: \"searchListItem__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Watchers: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, data.watchers_count)))));\n  }\n\n}\n\nSearchListItem.propTypes = {\n  data: PropTypes.object\n};\nexport default SearchListItem; // The results list should contain the repo name, the author’s name, the repo image, number of\n// stars & watchers. The list should be sorted by the number of stars. When the user clicks on a\n// result item, they should be taken to a new page where you display more info about the\n// repository and author (like when was it last updated, which programming language is used, the\n// author’s avatar etc.)","map":{"version":3,"sources":["/Users/olivergill/arctic/src/components/SearchListItem.js"],"names":["React","PropTypes","Link","SearchListItem","Component","render","data","props","full_name","name","owner","login","stargazers_count","watchers_count","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,uBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAEzCC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AACA,WACI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAwC,MAAA,EAAE,EAAG,eAAcA,IAAI,CAACE,SAAU,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASF,IAAI,CAACG,IAAd,CADrB,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASH,IAAI,CAACI,KAAL,CAAWC,KAApB,CADf,CAJJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASL,IAAI,CAACM,gBAAd,CADX,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASN,IAAI,CAACO,cAAd,CADd,CAJJ,CATJ,CADJ,CADJ;AAsBH;;AA1BwC;;AA6B7CV,cAAc,CAACW,SAAf,GAA2B;AACvBR,EAAAA,IAAI,EAAEL,SAAS,CAACc;AADO,CAA3B;AAIA,eAAeZ,cAAf,C,CACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './searchListItem.scss';\nimport { Link } from \"react-router-dom\";\n\nclass SearchListItem extends React.Component {\n\n    render() {\n        const data = this.props.data;\n        return (\n            <li className=\"searchListItem\">\n                <Link className=\"searchListItem__inner\" to={`/repository/${data.full_name}`}>\n                    <div className=\"searchListItem__left\">\n                        <div className=\"searchListItem__item\">\n                            Repository Name: <strong>{data.name}</strong>\n                        </div>\n                        <div className=\"searchListItem__item\">\n                            User Name: <strong>{data.owner.login}</strong>\n                        </div>\n                    </div>\n                    <div className=\"searchListItem__right\">\n                        <div className=\"searchListItem__item\">\n                            Stars: <strong>{data.stargazers_count}</strong>\n                        </div>\n                        <div className=\"searchListItem__item\">\n                            Watchers: <strong>{data.watchers_count}</strong>\n                        </div>\n                    </div>\n                </Link>\n            </li>\n        );\n    }\n}\n\nSearchListItem.propTypes = {\n    data: PropTypes.object\n}\n\nexport default SearchListItem;\n// The results list should contain the repo name, the author’s name, the repo image, number of\n// stars & watchers. The list should be sorted by the number of stars. When the user clicks on a\n// result item, they should be taken to a new page where you display more info about the\n// repository and author (like when was it last updated, which programming language is used, the\n// author’s avatar etc.)\n"]},"metadata":{},"sourceType":"module"}